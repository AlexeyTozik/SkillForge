---
# Создаёт Job по расписанию
# Является родительским по отношению к Job

# schedule - расписание создания Job
# concurrencyPolicy (Allow/Forbid/Replace) - опция, отвечающая за конкуретный или одновременный запуск Job'ов, а в следствии PODов, в случае, если у нас конкретная Job за промежуток времени завершится не успешно
# Successful Job History Limit - опция, которая подчищает старые Jobs
# Failed Job History Limit - подчищает, в случае неуспешных выполнений
# startingDeadlineSeconods - даёт отсрочку по запуску (то есть делает не критичным) на определённое время

# Если произошли сбои, в которые cronjob укладывается более 100 раз, то cronjob работать не будет (если без startingDeadlineSeconods), если с startingDeadlineSeconods, то будет отмерять 100 раз startingDeadlineSeconods

# startingDeadlineSeconods не задавать меньше 10 секунд (job может не запуститься)

# Список cronjobs
# kubectl get cronjob (или cj)

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: hello
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 100
      template:
        spec:
          containers:
          - name: hello
            image: quay.io/prometheus/busybox
            args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
          restartPolicy: Never
...